#!/usr/bin/env bash

# 获取命令行参数,注意参数之间以空格进行分割
INPUT1=$1
INPUT2=$2
INPUT3=$3

echo "当前运行文件名称:$0"
echo "$INPUT1""${INPUT2}""$INPUT3"

# ---------------- $# ---------------
# 获取命令行的参数个数
echo "$#"

# ---------------- $* ---------------
# 打印出命令行传递的所有参数,以字符串的形式
echo "$*"

# ---------------- $@ ---------------
# 和$*类似.但是它是把所有的参数放到了数组当中,取值可以采用索引的方式访问数据
args=$*
# 不推荐这么使用规范推荐使用$*
#args=$@
echo "${args[@]}"

# ---------------- $$ ---------------
# 获取运行当前脚本的进程id
echo "$$"

# ---------------- $! ---------------
# 后台运行的最后一个进程的ID号,如果没有则为空
# 例如运行main程序获取main程序进程ID并写入到pidfile.txt中:
# nohup ./main > nohup.log & echo $! >> pidfile.txt
echo "$!"

# ---------------- $- ---------------
# 显示Shell使用的当前选项，与set命令功能相同。todo:待研究
echo "$-"

# ---------------- $? ---------------
# 显示最后命令的退出状态。0表示没有错误，其他任何值表明有错误。
echo "$?"

# cmd:/bin/sh cmd.sh 1 2 3
# OUTPUT:
# 当前运行文件名称:cmd.sh
# 123
# 3
# 1 2 3
# 1 2 3
# 1352
#
# hB
# 0
